{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../filter/filter.component\";\nimport * as i4 from \"../drafted-notice/drafted-notice.component\";\nfunction NoticeTypeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-filter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NoticeTypeComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-drafted-notice\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NoticeTypeComponent {\n  onRadioChange(option) {\n    this.selectedOption = option;\n  }\n  static #_ = this.ɵfac = function NoticeTypeComponent_Factory(t) {\n    return new (t || NoticeTypeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoticeTypeComponent,\n    selectors: [[\"app-notice-type\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[\"id\", \"Outer\"], [\"id\", \"fun\"], [\"type\", \"radio\", \"name\", \"noticeType\", \"value\", \"submitted\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"radio\", \"name\", \"noticeType\", \"value\", \"drafted\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngIf\"]],\n    template: function NoticeTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"b\");\n        i0.ɵɵtext(3, \" Select View : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \"\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(5, \"label\")(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function NoticeTypeComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.selectedOption = $event;\n        })(\"change\", function NoticeTypeComponent_Template_input_change_6_listener() {\n          return ctx.onRadioChange(\"submitted\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"Submitted Notices\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(9, \"label\")(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function NoticeTypeComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.selectedOption = $event;\n        })(\"change\", function NoticeTypeComponent_Template_input_change_10_listener() {\n          return ctx.onRadioChange(\"drafted\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" Draft Notices\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, NoticeTypeComponent_div_12_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(13, NoticeTypeComponent_div_13_Template, 2, 0, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"submitted\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"drafted\");\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.FilterComponent, i4.DraftedNoticeComponent],\n    styles: [\"#container[_ngcontent-%COMP%]{\\n    background-color: blanchedalmond;\\n }\\n #sbtn[_ngcontent-%COMP%]{\\n    background-color: black;\\n    color: azure;\\n    border-radius: 4%;\\n }\\n #fun[_ngcontent-%COMP%]{\\n    width: 100%;\\n    height: 2%;\\n    \\n\\n    background-color: bisque;\\n }\\n\\n #nav[_ngcontent-%COMP%]{\\n    background-color: rgb(222, 0, 0);\\n    border-top-right-radius: 8px;\\n    border-top-left-radius: 8px;\\n }\\n #nav-item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\\n    width: 110px;\\n    height: 90px;\\n    padding-left: 30px;\\n    padding-top: 15px;\\n }\\n #nav-item[_ngcontent-%COMP%]{\\n    display: flex;\\n    gap: 1.0em;\\n    align-items: center;\\n    justify-items: center;\\n }\\n #menu[_ngcontent-%COMP%]{\\n    border: 1px solid  black;\\n    display: flex;\\n    align-items: center;\\n    justify-items: center;\\n    gap: 1.2em;\\n    height: 30px;\\n }\\n a[_ngcontent-%COMP%]{\\n    text-decoration: none;\\n    color: rgb( 42, 48,52);\\n }\\n #notice_type[_ngcontent-%COMP%]{\\n    display: flex;\\n    gap:5em;\\n    align-items: center;\\n }\\n hr[_ngcontent-%COMP%]{\\n    background-color: azure;\\n    height: 3px;\\n }\\n td[_ngcontent-%COMP%]{\\n    width: 300px;\\n    height: 32px;\\n }\\n td[_ngcontent-%COMP%]:nth-child(odd){\\n    width: auto;\\n }\\n select[_ngcontent-%COMP%]{\\n    width: 230px;\\n    border-radius: 5px;\\n }\\n \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm90aWNlLXR5cGUvbm90aWNlLXR5cGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdDQUFnQztDQUNuQztDQUNBO0lBQ0csdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixpQkFBaUI7Q0FDcEI7Q0FDQTtJQUNHLFdBQVc7SUFDWCxVQUFVO0lBQ1YsNkJBQTZCO0lBQzdCLHdCQUF3QjtDQUMzQjs7Q0FFQTtJQUNHLGdDQUFnQztJQUNoQyw0QkFBNEI7SUFDNUIsMkJBQTJCO0NBQzlCO0NBQ0E7SUFDRyxZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixpQkFBaUI7Q0FDcEI7Q0FDQTtJQUNHLGFBQWE7SUFDYixVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLHFCQUFxQjtDQUN4QjtDQUNBO0lBQ0csd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixZQUFZO0NBQ2Y7Q0FDQTtJQUNHLHFCQUFxQjtJQUNyQixzQkFBc0I7Q0FDekI7Q0FDQTtJQUNHLGFBQWE7SUFDYixPQUFPO0lBQ1AsbUJBQW1CO0NBQ3RCO0NBQ0E7SUFDRyx1QkFBdUI7SUFDdkIsV0FBVztDQUNkO0NBQ0E7SUFDRyxZQUFZO0lBQ1osWUFBWTtDQUNmO0NBQ0E7SUFDRyxXQUFXO0NBQ2Q7Q0FDQTtJQUNHLFlBQVk7SUFDWixrQkFBa0I7Q0FDckIiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGFpbmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhbmNoZWRhbG1vbmQ7XHJcbiB9XHJcbiAjc2J0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgY29sb3I6IGF6dXJlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNCU7XHJcbiB9XHJcbiAjZnVue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDIlO1xyXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgYmxhY2s7ICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7XHJcbiB9XHJcblxyXG4gI25hdntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjIsIDAsIDApO1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcclxuIH1cclxuICNuYXYtaXRlbSBpbWd7XHJcbiAgICB3aWR0aDogMTEwcHg7XHJcbiAgICBoZWlnaHQ6IDkwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuIH1cclxuICNuYXYtaXRlbXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6IDEuMGVtO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuIH1cclxuICNtZW51e1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIGJsYWNrO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBnYXA6IDEuMmVtO1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gfVxyXG4gYXtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGNvbG9yOiByZ2IoIDQyLCA0OCw1Mik7XHJcbiB9XHJcbiAjbm90aWNlX3R5cGV7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZ2FwOjVlbTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiB9XHJcbiBocntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xyXG4gICAgaGVpZ2h0OiAzcHg7XHJcbiB9XHJcbiB0ZHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGhlaWdodDogMzJweDtcclxuIH1cclxuIHRkOm50aC1jaGlsZChvZGQpe1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiB9XHJcbiBzZWxlY3R7XHJcbiAgICB3aWR0aDogMjMwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiB9XHJcbiAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","NoticeTypeComponent","onRadioChange","option","selectedOption","_","_2","selectors","decls","vars","consts","template","NoticeTypeComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","NoticeTypeComponent_Template_input_ngModelChange_6_listener","$event","NoticeTypeComponent_Template_input_change_6_listener","NoticeTypeComponent_Template_input_ngModelChange_10_listener","NoticeTypeComponent_Template_input_change_10_listener","ɵɵtemplate","NoticeTypeComponent_div_12_Template","NoticeTypeComponent_div_13_Template","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Angular-frontend\\angular-frontend\\src\\app\\notice-type\\notice-type.component.ts","D:\\Angular-frontend\\angular-frontend\\src\\app\\notice-type\\notice-type.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notice-type',\n  templateUrl: './notice-type.component.html',\n  styleUrls: ['./notice-type.component.css']\n})\nexport class NoticeTypeComponent {\n  selectedOption : string | undefined   ;\n\n  \n  onRadioChange(option :string){\n    this.selectedOption=option;\n    \n\n  }\n}\n","<!-- filter.component.html -->\n<div id=\"Outer\">\n<div id=\"fun\"> \n    <b>\n      Select View :\n  </b>&nbsp;&nbsp;\n  <!-- <label ><input type=\"radio\" name=\"submitedNotice\" value=\"submitedNotice\">Submitted Notice</label>\n  <label ><input type=\"radio\" name=\"submitedNotice\" value=\"submitedNotice\">Drafted Notice</label> -->\n  <label> <input type=\"radio\" name=\"noticeType\" value=\"submitted\" [(ngModel)]=\"selectedOption\" (change)=\"onRadioChange('submitted')\" >Submitted Notices</label>&nbsp;&nbsp;\n  <label>  <input type=\"radio\" name=\"noticeType\" value=\"drafted\" [(ngModel)]=\"selectedOption\" (change)=\"onRadioChange('drafted')\"> Draft Notices</label>\n\n</div>\n</div>\n  <!-- Conditionally display submitted or drafted content based on the selected radio button -->\n  <div *ngIf=\"selectedOption === 'submitted'\">\n    <!-- Your submitted screen content goes here -->\n    <app-filter></app-filter>\n    <!-- <h1>submited screen</h1> -->\n  </div>\n  \n  <div *ngIf=\"selectedOption === 'drafted'\">\n    <!-- Your drafted screen content goes here -->\n    <!-- <app-table-data></app-table-data> -->\n    <app-drafted-notice></app-drafted-notice>\n    <!-- <p>drafted page </p> -->\n  </div>\n"],"mappings":";;;;;;;ICcEA,EAAA,CAAAC,cAAA,UAA4C;IAE1CD,EAAA,CAAAE,SAAA,iBAAyB;IAE3BF,EAAA,CAAAG,YAAA,EAAM;;;;;IAENH,EAAA,CAAAC,cAAA,UAA0C;IAGxCD,EAAA,CAAAE,SAAA,yBAAyC;IAE3CF,EAAA,CAAAG,YAAA,EAAM;;;ADlBR,OAAM,MAAOC,mBAAmB;EAI9BC,aAAaA,CAACC,MAAc;IAC1B,IAAI,CAACC,cAAc,GAACD,MAAM;EAG5B;EAAC,QAAAE,CAAA,G;qBARUJ,mBAAmB;EAAA;EAAA,QAAAK,EAAA,G;UAAnBL,mBAAmB;IAAAM,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNhChB,EAAA,CAAAC,cAAA,aAAgB;QAGVD,EAAA,CAAAkB,MAAA,sBACJ;QAAAlB,EAAA,CAAAG,YAAA,EAAI;QAAAH,EAAA,CAAAkB,MAAA,oBACJ;QAEAlB,EAAA,CAAAC,cAAA,YAAO;QAAyDD,EAAA,CAAAmB,UAAA,2BAAAC,4DAAAC,MAAA;UAAA,OAAAJ,GAAA,CAAAV,cAAA,GAAAc,MAAA;QAAA,EAA4B,oBAAAC,qDAAA;UAAA,OAAWL,GAAA,CAAAZ,aAAA,CAAc,WAAW,CAAC;QAAA,EAArC;QAApFL,EAAA,CAAAG,YAAA,EAA4H;QAAAH,EAAA,CAAAkB,MAAA,wBAAiB;QAAAlB,EAAA,CAAAG,YAAA,EAAQ;QAAAH,EAAA,CAAAkB,MAAA,oBAC7J;QAAAlB,EAAA,CAAAC,cAAA,YAAO;QAAwDD,EAAA,CAAAmB,UAAA,2BAAAI,6DAAAF,MAAA;UAAA,OAAAJ,GAAA,CAAAV,cAAA,GAAAc,MAAA;QAAA,EAA4B,oBAAAG,sDAAA;UAAA,OAAWP,GAAA,CAAAZ,aAAA,CAAc,SAAS,CAAC;QAAA,EAAnC;QAAlFL,EAAA,CAAAG,YAAA,EAAuH;QAACH,EAAA,CAAAkB,MAAA,sBAAa;QAAAlB,EAAA,CAAAG,YAAA,EAAQ;QAKtJH,EAAA,CAAAyB,UAAA,KAAAC,mCAAA,iBAIM;QAEN1B,EAAA,CAAAyB,UAAA,KAAAE,mCAAA,iBAKM;;;QAjB0D3B,EAAA,CAAA4B,SAAA,GAA4B;QAA5B5B,EAAA,CAAA6B,UAAA,YAAAZ,GAAA,CAAAV,cAAA,CAA4B;QAC7BP,EAAA,CAAA4B,SAAA,GAA4B;QAA5B5B,EAAA,CAAA6B,UAAA,YAAAZ,GAAA,CAAAV,cAAA,CAA4B;QAKrFP,EAAA,CAAA4B,SAAA,GAAoC;QAApC5B,EAAA,CAAA6B,UAAA,SAAAZ,GAAA,CAAAV,cAAA,iBAAoC;QAMpCP,EAAA,CAAA4B,SAAA,GAAkC;QAAlC5B,EAAA,CAAA6B,UAAA,SAAAZ,GAAA,CAAAV,cAAA,eAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}