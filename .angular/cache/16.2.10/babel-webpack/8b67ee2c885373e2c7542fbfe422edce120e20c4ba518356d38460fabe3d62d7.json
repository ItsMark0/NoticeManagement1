{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction NoticeTypeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-filter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NoticeTypeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-table-data\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NoticeTypeComponent {\n  onRadioChange(option) {\n    this.selectedOption = option;\n  }\n  static #_ = this.ɵfac = function NoticeTypeComponent_Factory(t) {\n    return new (t || NoticeTypeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoticeTypeComponent,\n    selectors: [[\"app-notice-type\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[\"id\", \"backgroud\"], [\"type\", \"radio\", \"name\", \"noticeType\", \"value\", \"submitted\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"radio\", \"name\", \"noticeType\", \"value\", \"drafted\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngIf\"]],\n    template: function NoticeTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"b\");\n        i0.ɵɵtext(2, \" Select View : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\")(4, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function NoticeTypeComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.selectedOption = $event;\n        })(\"change\", function NoticeTypeComponent_Template_input_change_4_listener() {\n          return ctx.onRadioChange(\"submitted\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \"Submitted\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\")(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function NoticeTypeComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.selectedOption = $event;\n        })(\"change\", function NoticeTypeComponent_Template_input_change_7_listener() {\n          return ctx.onRadioChange(\"drafted\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" Drafted\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, NoticeTypeComponent_div_9_Template, 2, 0, \"div\", 3);\n        i0.ɵɵtemplate(10, NoticeTypeComponent_div_10_Template, 2, 0, \"div\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"submitted\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"drafted\");\n      }\n    },\n    styles: [\"#backgroud[_ngcontent-%COMP%]{\\n    display: flex;\\n    gap:5em;\\n    align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm90aWNlLXR5cGUvbm90aWNlLXR5cGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixPQUFPO0lBQ1AsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiI2JhY2tncm91ZHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6NWVtO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","NoticeTypeComponent","onRadioChange","option","selectedOption","_","_2","selectors","decls","vars","consts","template","NoticeTypeComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","NoticeTypeComponent_Template_input_ngModelChange_4_listener","$event","NoticeTypeComponent_Template_input_change_4_listener","NoticeTypeComponent_Template_input_ngModelChange_7_listener","NoticeTypeComponent_Template_input_change_7_listener","ɵɵtemplate","NoticeTypeComponent_div_9_Template","NoticeTypeComponent_div_10_Template","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Angular-frontend\\angular-frontend\\src\\app\\notice-type\\notice-type.component.ts","D:\\Angular-frontend\\angular-frontend\\src\\app\\notice-type\\notice-type.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notice-type',\n  templateUrl: './notice-type.component.html',\n  styleUrls: ['./notice-type.component.css']\n})\nexport class NoticeTypeComponent {\n  selectedOption : string | undefined   ;\n\n  \n  onRadioChange(option :string){\n    this.selectedOption=option;\n    \n\n  }\n}\n","<!-- filter.component.html -->\n<div id=\"backgroud\"> \n    <b>\n      Select View :\n  </b>\n  <!-- <label ><input type=\"radio\" name=\"submitedNotice\" value=\"submitedNotice\">Submitted Notice</label>\n  <label ><input type=\"radio\" name=\"submitedNotice\" value=\"submitedNotice\">Drafted Notice</label> -->\n  <label> <input type=\"radio\" name=\"noticeType\" value=\"submitted\" [(ngModel)]=\"selectedOption\" (change)=\"onRadioChange('submitted')\" >Submitted</label>\n  <label>  <input type=\"radio\" name=\"noticeType\" value=\"drafted\" [(ngModel)]=\"selectedOption\" (change)=\"onRadioChange('drafted')\"> Drafted</label>\n  </div>\n  \n  <!-- Conditionally display submitted or drafted content based on the selected radio button -->\n  <div *ngIf=\"selectedOption === 'submitted'\">\n    <!-- Your submitted screen content goes here -->\n    <app-filter></app-filter>\n    <!-- <h1>submited screen</h1> -->\n  </div>\n  \n  <div *ngIf=\"selectedOption === 'drafted'\">\n    <!-- Your drafted screen content goes here -->\n    <app-table-data></app-table-data>\n  </div>"],"mappings":";;;ICYEA,EAAA,CAAAC,cAAA,UAA4C;IAE1CD,EAAA,CAAAE,SAAA,iBAAyB;IAE3BF,EAAA,CAAAG,YAAA,EAAM;;;;;IAENH,EAAA,CAAAC,cAAA,UAA0C;IAExCD,EAAA,CAAAE,SAAA,qBAAiC;IACnCF,EAAA,CAAAG,YAAA,EAAM;;;ADdR,OAAM,MAAOC,mBAAmB;EAI9BC,aAAaA,CAACC,MAAc;IAC1B,IAAI,CAACC,cAAc,GAACD,MAAM;EAG5B;EAAC,QAAAE,CAAA,G;qBARUJ,mBAAmB;EAAA;EAAA,QAAAK,EAAA,G;UAAnBL,mBAAmB;IAAAM,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNhChB,EAAA,CAAAC,cAAA,aAAoB;QAEdD,EAAA,CAAAkB,MAAA,sBACJ;QAAAlB,EAAA,CAAAG,YAAA,EAAI;QAGJH,EAAA,CAAAC,cAAA,YAAO;QAAyDD,EAAA,CAAAmB,UAAA,2BAAAC,4DAAAC,MAAA;UAAA,OAAAJ,GAAA,CAAAV,cAAA,GAAAc,MAAA;QAAA,EAA4B,oBAAAC,qDAAA;UAAA,OAAWL,GAAA,CAAAZ,aAAA,CAAc,WAAW,CAAC;QAAA,EAArC;QAApFL,EAAA,CAAAG,YAAA,EAA4H;QAAAH,EAAA,CAAAkB,MAAA,gBAAS;QAAAlB,EAAA,CAAAG,YAAA,EAAQ;QACrJH,EAAA,CAAAC,cAAA,YAAO;QAAwDD,EAAA,CAAAmB,UAAA,2BAAAI,4DAAAF,MAAA;UAAA,OAAAJ,GAAA,CAAAV,cAAA,GAAAc,MAAA;QAAA,EAA4B,oBAAAG,qDAAA;UAAA,OAAWP,GAAA,CAAAZ,aAAA,CAAc,SAAS,CAAC;QAAA,EAAnC;QAAlFL,EAAA,CAAAG,YAAA,EAAuH;QAACH,EAAA,CAAAkB,MAAA,eAAO;QAAAlB,EAAA,CAAAG,YAAA,EAAQ;QAIhJH,EAAA,CAAAyB,UAAA,IAAAC,kCAAA,iBAIM;QAEN1B,EAAA,CAAAyB,UAAA,KAAAE,mCAAA,iBAGM;;;QAd0D3B,EAAA,CAAA4B,SAAA,GAA4B;QAA5B5B,EAAA,CAAA6B,UAAA,YAAAZ,GAAA,CAAAV,cAAA,CAA4B;QAC7BP,EAAA,CAAA4B,SAAA,GAA4B;QAA5B5B,EAAA,CAAA6B,UAAA,YAAAZ,GAAA,CAAAV,cAAA,CAA4B;QAIrFP,EAAA,CAAA4B,SAAA,GAAoC;QAApC5B,EAAA,CAAA6B,UAAA,SAAAZ,GAAA,CAAAV,cAAA,iBAAoC;QAMpCP,EAAA,CAAA4B,SAAA,GAAkC;QAAlC5B,EAAA,CAAA6B,UAAA,SAAAZ,GAAA,CAAAV,cAAA,eAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}